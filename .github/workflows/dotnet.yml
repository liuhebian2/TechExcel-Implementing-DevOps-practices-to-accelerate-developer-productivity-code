# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths:
      - 'Application/**'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'Application/**'

env:
  registryName: "nckckcah2pqk4mpnpreg.azurecr.io"  # Replace with your ACR registry name
  repositoryName: "techboost/dotnetcoreapp"
  dockerFolderPath: "Application/src/RazorPagesTestSample"
  tag: ${{ github.run_number }}
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore
        run: dotnet restore Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj

      - name: Build
        run: dotnet build Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj --configuration Debug

      - name: Restore Test
        run: dotnet restore Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj
        
      - name: Build Test
        run: dotnet build Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj
        
      - name: Test
        run: dotnet test Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj

  deploy-to-dev:
    needs: build  # Specify that the deploy job depends on the completion of the build job
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Docker Login
        run: docker login ${{ env.registryName }} -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }} --build-arg build_version=${{ env.tag }} ${{ env.dockerFolderPath }}

      - name: Docker Push
        run: docker push ${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}
      
      - name: Login to Azure using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: web app deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ vars.APP_NAME}}"
          images: "${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}"
 
  deploy-to-test:
    needs: deploy-to-dev  # Specify that the deploy job depends on the completion of the build job
    runs-on: ubuntu-latest
    environment:
      name: test
    steps:
      - name: Login to Azure using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: web app deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ vars.APP_NAME}}"
          images: "${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}"


  deploy-to-prod:
    needs: deploy-to-test  # Specify that the deploy job depends on the completion of the build job
    runs-on: ubuntu-latest
    environment:
      name: prod
    steps:
      - name: Login to Azure using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: web app deploy
        uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ vars.APP_NAME}}"
          images: "${{ env.registryName }}/${{ env.repositoryName }}:${{ env.tag }}"

